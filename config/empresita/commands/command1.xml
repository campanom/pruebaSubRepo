<?xml version='1.0' encoding='utf-8'?>
<command-definition name='Alumno'>
  <command name='delete-student' description='Delete a Alumno'>
    <sql-command var = 'id'>
      <script>
		insert into innova_aico.alumno (nombre,apellido,num_documento,tipo_documento,domicilio,sexo,localidad,provincia_id,pais_id,fecha_nacimiento, alumno_estado_id)
		values (:nombre,:apellido,:num_documento,:tipo_documento,:domicilio,:sexo,:localidad,:provincia_id,:pais_id,STR_TO_DATE(:fecha_nacimiento,'%Y-%m-%dT%T.000Z'),
			(select id from innova_aico.alumno_estado where lower(nombre)='inscripto' limit 1));</script>
    </sql-command>
    <event type="Etl" name="aico.createSubject" />
  </command>

  <command name='update-student' description='Update a Alumno'>
    <sql-command order='1'>
      <script>
		  update innova_aico.alumno
		  set nombre = :nombre,apellido = :apellido,num_documento = :num_documento,tipo_documento = :tipo_documento,domicilio = :domicilio,sexo = :sexo,localidad = :localidad,provincia_id = :provincia_id,pais_id = :pais_id,fecha_nacimiento = STR_TO_DATE(:fecha_nacimiento,'%Y-%m-%dT%T.000Z')
		  where id = :id
	  </script>
    </sql-command>
	<event type="Etl" name="aico.updateSubject" />
  </command>
  
  <command name='delete-student' description='Delete a Alumno'>
    <sql-command order='1'>
      <script>
		  update innova_aico.alumno
		  set fecha_baja = now()
		  where id = :id;
	  </script>
    </sql-command>
	<sql-command order='2'>
		<script>
			update innova_aico.alumno_curso 
			set fecha_baja = now() 
			where alumno_id = :id;
		</script>
    </sql-command>
	<sql-command order='3'>
		<script>
			update innova_aico.liquidacion 
			set fecha_baja = now() 
			where alumno_curso_id in (
					select ac.id from innova_aico.alumno_curso ac 
					where alumno_id = :id);
		</script>
    </sql-command>
  </command>

  <command name='findById-student' description='Find by id a Alumno'>
    <sql-command order='1'>
	    <script>
			    select distinct
			    a.*,
		            case when a.sexo = 'M' then 'Masculino'
						when a.sexo = 'F' then 'Femenino'
						else '' end as sexo_descripcion,
					p.nombre as provincia,
					pa.nombre as pais,
					ae.nombre as alumno_estado
		            from innova_aico.alumno a
					left join innova_aico.pais pa
						on pa.id = a.pais_id
		            left join innova_aico.provincia p
						on p.id = a.provincia_id
					left join innova_aico.alumno_estado ae 
						on ae.id = a.alumno_estado_id
		            where a.id = :id and a.fecha_baja is null
	    </script>
    </sql-command>
  </command>
 <command name='findByIdStudent' description='Find by id a Alumno'>
    <sql-command order='1'>
            <script>
				select distinct
				a.*,
				case when a.sexo = 'M' then 'Masculino'
					when a.sexo = 'F' then 'Femenino'
					else '' end as sexo_descripcion,
				p.nombre as provincia,
				pa.nombre as pais,
					ae.nombre as alumno_estado
				from innova_aico.alumno a
				left join innova_aico.pais pa
					on pa.id = a.pais_id
				left join innova_aico.provincia p
					on p.id = a.provincia_id
				left join innova_aico.alumno_estado ae 
					on ae.id = a.alumno_estado_id
				where a.id = :id and a.fecha_baja is null
            </script>
    </sql-command>
  </command>

  <command name='findSchedules' description='Buscar horarios disponibles'>
    <sql-command order='1'>
	    <script>
		    select distinct
		        c.id as curso_id,
		        :id as alumno_id,
		     	c.nombre as name_curso,
		    	h.dia as name_dia,
		    	h.hora as name_hora,
		    	h.duracion,
		    	ac.id as alumno_curso_id
		    from innova_aico.horario h
		    inner join innova_aico.curso c on h.curso_id = c.id
		    left join innova_aico.alumno_curso ac on ac.curso_id = c.id and ac.alumno_id = :id 
			and ac.fecha_baja is null

	    </script>
    </sql-command>
    </command>

	<command name='findCoursesToRegister' description='Buscar cursos disponibles'>
		<sql-command order='1'>
			<script>
				select distinct
					c.id as curso_id,
					:id as alumno_id,
					c.nombre as name_curso,
					ac.id as alumno_curso_id,
					c.monto_total
				from innova_aico.curso c
				left join innova_aico.alumno_curso ac
					on ac.curso_id = c.id and ac.alumno_id = :id and ac.fecha_baja is null
				where ac.id is null
			</script>
		</sql-command>
	</command>

	<command name='findCoursesByAlumno' description='Buscar cursos por alumno'>
		<sql-command order='1'>
			<script>
				select distinct
					c.id as curso_id,
					:id as alumno_id,
					c.nombre as name_curso,
					ac.id as alumno_curso_id,
					c.monto_total
				from innova_aico.curso c
				inner join innova_aico.alumno_curso ac
					on ac.curso_id = c.id and ac.alumno_id = :id and ac.fecha_baja is null
			</script>
		</sql-command>
	</command>

  <command name='search-paged-student' description='Search paged for Alumno'>
    <sql-command order='1'>
          <script>
					select distinct
			        a.*,
                    case when a.sexo = 'M' then 'Masculino'
					when a.sexo = 'F' then 'Femenino'
					else '' end as sexo_descripcion,
                                 p.nombre as provincia,
                                 pa.nombre as pais,
					ae.nombre as alumno_estado
			         from innova_aico.alumno a
						left join innova_aico.pais pa
                            on pa.id = a.pais_id
                        left join innova_aico.provincia p on p.id = a.provincia_id
						left join innova_aico.alumno_estado ae 
							on ae.id = a.alumno_estado_id
					 where a.fecha_baja is null and (:nombre_apellido_documento is null
						  or a.nombre like concat('%',:nombre_apellido_documento,'%')
						  or a.apellido like concat('%',:nombre_apellido_documento,'%')
						  or a.num_documento like concat('%',:nombre_apellido_documento,'%'))
					and ((:alumno_estado_id is null or :alumno_estado_id = '') or (:alumno_estado_id = ae.id))
					order by id limit :maxResults offset :firstResult
		 </script>
    </sql-command>
  </command>

  <command name='search-paged-student-total' description='Count Alumno'>
    <sql-command order='1'>
                      <script>
			      select count(distinct a.id) from innova_aico.alumno a
					left join innova_aico.pais pa
                             on pa.id = a.pais_id
                    left join innova_aico.provincia p
						on p.id = a.provincia_id
					left join innova_aico.alumno_estado ae 
							on ae.id = a.alumno_estado_id
				  where a.fecha_baja is null and (:nombre_apellido_documento is null
				  or a.nombre like concat('%',:nombre_apellido_documento,'%')
				  or a.apellido like concat('%',:nombre_apellido_documento,'%')
				  or a.num_documento like concat('%',:nombre_apellido_documento,'%'))
				  and ((:alumno_estado_id is null or :alumno_estado_id = '') or (:alumno_estado_id = ae.id))
		      </script>
    </sql-command>
  </command>

  <command name='removeAlumnoCurso' description='Delete a Alumno'>
    <sql-command order='1'>
      <script>
			update innova_aico.alumno_curso 
			set fecha_baja = now() 
			where id = :alumno_curso_id 
		</script>
    </sql-command>
	<sql-command order='2'>
		<script>
			update innova_aico.liquidacion 
			set fecha_baja = now() 
			where alumno_curso_id = :alumno_curso_id;
		</script>
    </sql-command>
  </command>

    <command name='combo-tipoDni' description='Trae los tipos de documento'>
    <sql-command order='1'>
               <script>
		    SELECT 'DNI' as value , 'DNI' as name
                    UNION ALL
		    SELECT  'OTROS' as value , 'OTROS' as name
	       </script>
    </sql-command>
  </command>

  <command name='comboInstallments' description='Trae los tipos de documento'>
    <sql-command order='1'>
               <script>
		    		SELECT '1' as value , '1' as name
                    UNION ALL
                    SELECT  '2' as value , '2' as name
                    UNION ALL
                    SELECT  '3' as value , '3' as name
                    UNION ALL
                    SELECT  '6' as value , '6' as name
                    UNION ALL
		    		SELECT  '12' as value , '12' as name
	       </script>
    </sql-command>
  </command>

  <command name='comboSexo' description='Combo sexo'>
    <sql-command order='1'>
            <script>
		    SELECT 'M' as value,'Masculino' as name
		    UNION ALL
		    SELECT 'F' as value,'Femenino'as name
            </script>
    </sql-command>
  </command>
 <command name='saveAlumnoCurso' description='Inscripcion a Curso'>
    <sql-command order='1' var="alumno_curso_id">
           <script>
				insert into innova_aico.alumno_curso (alumno_id,curso_id,importe_cuota,cantidad_cuotas,monto_total,pago_tipo_id)
				values (:alumno_id,:curso_id,:importe_cuota,:cantidad_cuotas,:monto_total,:pago_tipo_id)
	       </script>
    </sql-command>
	<sql-command order='2'>
           <script >
				call innova_aico.sp_create_liquidaciones (:cantidad_cuotas, :alumno_curso_id, :importe_cuota, date(now()))
	       </script>
    </sql-command>
  </command>
  <command name='comboCountry' description='Combo de pais'>
    <sql-command order='1'>
	    <script>
		    SELECT id as value,nombre as name FROM innova_aico.pais;
            </script>
    </sql-command>
  </command>
  <command name='comboProvince' description='Combo de provincia'>
    <sql-command order='1'>
            <script>
                    SELECT id as value,nombre as name FROM innova_aico.provincia;
            </script>
    </sql-command>
  </command>
  
	<command name='comboAlumnoEstado' description='Combo de provincia'>
		<sql-command order='1'>
			<script>
				SELECT id as value,nombre as name FROM innova_aico.alumno_estado;
			</script>
		</sql-command>
	</command>
  
  <command name='comboTipoPago' description='Combo de tipos de pagos'>
    <sql-command order='1'>
            <script>
                    SELECT id as value,tipo as name FROM innova_aico.pago_tipo;
            </script>
    </sql-command>
  </command>

  <command name="subject" description="Obtener Subject Identity de Messenger">
		<sql-command>
			<script>
				select :id
			</script>
		</sql-command>
	</command>
	
	<command name='addContact' description='Adds a new contact'>
		<sql-command order='1'>
			<script>
				INSERT INTO innova_aico.alumno_contacto (tipo_contacto, contacto, alumno_id) 
				VALUES (:tipo, :contacto, :id);
			</script>  
		</sql-command>
		<event type="Etl" name="aico.addContact" />
	</command>
    
	<command name='reinitcontacto' description='Para la carga de contactos'>
		<sql-command order='1'>
			<script>
				select null as tipo, null as contacto, :id as id
			</script>
		</sql-command>
	</command>
        
	<command name='deleteContact' description='Delete a contact'>
		<sql-command order='1'>
			<script>
				delete from innova_aico.alumno_contacto where id = :id
			</script>
		</sql-command>
		<event type="Etl" name="aico.deleteContact" />
	</command>
	  
  
	<command name='listContacts' description='List student contacts'>
		<sql-command order='1'>
			<script>
				 SELECT ac.*
					   FROM innova_aico.alumno_contacto ac 
					where alumno_id = :id
			</script>  
		</sql-command>
	</command>
	
	<command name='comboTipoContacto' description='Trae los tipos de contacto'>
		<sql-command order='1'>
			<script>
				SELECT 'Telefono' as value , 'Telefono' as name
					UNION ALL
				SELECT  'Email' as value , 'Email' as name
			</script>
		</sql-command>
	</command>
</command-definition>

